{"ast":null,"code":"var _jsxFileName = \"/Users/yxni-mbp/Dropbox (Personal)/Startup/Accretion/Website/frontend/React_Accretion/accretion/src/user-auth/Login.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './user-auth.css';\n// import AuthJWT from './AuthJWT.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  // console.log(\"is authenticated: \", AuthJWT());\n\n  const [jwt, setJWT] = useState({\n    \"refresh\": \"\",\n    \"access\": \"\"\n  });\n  const [userData, setUserData] = useState({\n    \"username\": \"\",\n    \"password\": \"\"\n  });\n  const cleanUserData = () => {\n    setUserData({\n      \"username\": \"\",\n      \"password\": \"\"\n    });\n  };\n  const [loginError, setLoginError] = useState({});\n  const changeHandler = event => {\n    setUserData({\n      ...userData,\n      [event.target.name]: event.target.value\n    });\n    console.log(event.target.value);\n  };\n\n  // const submitHandler = async (event) => {\n  //     event.preventDefault();\n\n  //     fetch('http://127.0.0.1:8000/auth/jwt/create/', {\n  //         method: 'POST', \n  //         headers: {\n  //             'Content-Type': 'application/json'\n  //         },\n  //         body: JSON.stringify(userData)\n  //     })\n  //     .then(response => {\n  //         if (!response.ok) {\n  //             return response.json()\n  //             .then(data => {throw new Error(JSON.stringify(data))})\n  //         } else {\n  //             console.log(\"Successfully logged in!\")\n  //             // alert(\"Successfully logged in!\");\n  //             // cleanUserData();\n  //         }\n  //         return response.json();\n  //     })\n  //     .then(data => {\n  //         setJWT((prevJWT) => ({ // use asyn function to update state\n  //             ...prevJWT, \n  //             \"refresh\": data.refresh,\n  //             \"access\": data.access\n  //         }))\n  //         localStorage.setItem('jwt', JSON.stringify(jwt));\n  //     })\n  //     .catch(error => {\n  //         console.log(error.message);\n  //     })\n  // }   \n\n  /* use try catch */\n  const submitHandler = async event => {\n    event.preventDefault();\n    try {\n      const response = await fetch('http://127.0.0.1:8000/auth/jwt/create/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n      });\n      if (!response.ok) {\n        throw new Error(await response.json());\n      }\n      if (response.ok) {\n        const data = await response.json();\n        setJWT(prevJWT => ({\n          // use asyn function to update state\n          ...prevJWT,\n          \"refresh\": data.refresh,\n          \"access\": data.access\n        }));\n        console.log(\"Successfully logged in!\", data);\n        localStorage.setItem('jwt', JSON.stringify(jwt));\n        alert(\"Successfully logged in!\");\n        return true;\n      }\n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          onChange: changeHandler,\n          value: userData.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          onChange: changeHandler,\n          value: userData.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"cR/8YxlCMxlBbrPIleB6ogEBn1k=\");\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Login","_s","jwt","setJWT","userData","setUserData","cleanUserData","loginError","setLoginError","changeHandler","event","target","name","value","console","log","submitHandler","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","Error","json","data","prevJWT","refresh","access","localStorage","setItem","alert","error","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","username","password","_c","$RefreshReg$"],"sources":["/Users/yxni-mbp/Dropbox (Personal)/Startup/Accretion/Website/frontend/React_Accretion/accretion/src/user-auth/Login.js"],"sourcesContent":["import { useState } from 'react';\nimport './user-auth.css';\n// import AuthJWT from './AuthJWT.js';\n\nexport default function Login () {\n\n    // console.log(\"is authenticated: \", AuthJWT());\n\n    const [jwt, setJWT] = useState({\n        \"refresh\": \"\",\n        \"access\": \"\"\n    });\n\n    const [userData, setUserData] = useState({\n        \"username\": \"\",\n        \"password\": \"\",\n    });\n\n    const cleanUserData = () => {\n        setUserData({\n            \"username\": \"\",\n            \"password\": \"\",\n        });\n    }\n\n    const [loginError, setLoginError] = useState({});\n    \n    const changeHandler = (event) => {\n        setUserData({\n            ...userData, \n            [event.target.name]: event.target.value\n        });\n        \n        console.log(event.target.value);\n    }\n\n    // const submitHandler = async (event) => {\n    //     event.preventDefault();\n        \n    //     fetch('http://127.0.0.1:8000/auth/jwt/create/', {\n    //         method: 'POST', \n    //         headers: {\n    //             'Content-Type': 'application/json'\n    //         },\n    //         body: JSON.stringify(userData)\n    //     })\n    //     .then(response => {\n    //         if (!response.ok) {\n    //             return response.json()\n    //             .then(data => {throw new Error(JSON.stringify(data))})\n    //         } else {\n    //             console.log(\"Successfully logged in!\")\n    //             // alert(\"Successfully logged in!\");\n    //             // cleanUserData();\n    //         }\n    //         return response.json();\n    //     })\n    //     .then(data => {\n    //         setJWT((prevJWT) => ({ // use asyn function to update state\n    //             ...prevJWT, \n    //             \"refresh\": data.refresh,\n    //             \"access\": data.access\n    //         }))\n    //         localStorage.setItem('jwt', JSON.stringify(jwt));\n    //     })\n    //     .catch(error => {\n    //         console.log(error.message);\n    //     })\n    // }   \n    \n    /* use try catch */\n    const submitHandler = async (event) => {\n        event.preventDefault();\n        \n        try {\n            const response = await fetch(\n                'http://127.0.0.1:8000/auth/jwt/create/', \n                {\n                    method: 'POST', \n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify(userData)\n                }\n            )\n\n            if (!response.ok) {\n                throw new Error(await response.json());\n            }\n\n            if (response.ok) {\n                const data = await response.json(); \n                setJWT((prevJWT) => ({ // use asyn function to update state\n                    ...prevJWT, \n                    \"refresh\": data.refresh,\n                    \"access\": data.access\n                }));\n                console.log(\"Successfully logged in!\", data);\n                localStorage.setItem('jwt', JSON.stringify(jwt));\n                alert(\"Successfully logged in!\");\n                return true;\n            }\n        } \n        catch (error) {\n            console.log(error); \n            return false; \n        }\n    }   \n\n    return (\n        <div>\n            <form onSubmit={submitHandler}> \n                <div>\n                    <label>Username</label>  \n                    <input type=\"text\" name=\"username\" onChange={changeHandler} value={userData.username} />  \n                </div>\n                <div>\n                    <label>Password</label>  \n                    <input type=\"password\" name=\"password\" onChange={changeHandler} value={userData.password} />  \n                </div>\n                <button type=\"submit\">Login</button>   \n            </form>\n        </div>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}