{"ast":null,"code":"export default async function RefreshJWTaccess(refresh_token) {\n  try {\n    const response = await fetch(\"http://localhost:8000/auth/jwt/refresh/\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: `{\"refresh\": \"${refresh_token}\"}`\n    });\n    if (response.ok) {\n      const data = await response.json();\n      // data access and refresh token to local storage\n      // const access_token = await data.access; \n      localStorage.setItem('jwt', JSON.stringify({\n        \"access\": data.access,\n        \"refresh\": refresh_token\n      }));\n      console.log(\"JWT access token is refreshed\");\n      return true;\n    }\n    if (!response.ok) {\n      throw new Error(await response.json());\n    }\n  } catch (error) {\n    console.log(\"JWT token refresh encountered an error\");\n    console.log(error);\n    return false;\n  }\n}\n_c = RefreshJWTaccess;\nvar _c;\n$RefreshReg$(_c, \"RefreshJWTaccess\");","map":{"version":3,"names":["RefreshJWTaccess","refresh_token","response","fetch","method","headers","body","ok","data","json","localStorage","setItem","JSON","stringify","access","console","log","Error","error","_c","$RefreshReg$"],"sources":["/Users/yxni-mbp/Dropbox (Personal)/Startup/Accretion/Website/frontend/React_Accretion/accretion/src/user-auth/RefreshJWTaccess.js"],"sourcesContent":["\nexport default async function RefreshJWTaccess (refresh_token) { \n    try {\n        const response = await fetch(\n            \"http://localhost:8000/auth/jwt/refresh/\", \n            {\n                method: 'POST', \n                headers: {\n                    'Content-Type': 'application/json'\n                }, \n                body: `{\"refresh\": \"${refresh_token}\"}`\n            }\n        );\n\n        if (response.ok) {\n            const data = await response.json(); \n            // data access and refresh token to local storage\n            // const access_token = await data.access; \n            localStorage.setItem('jwt', JSON.stringify({\n                \"access\": data.access, \n                \"refresh\": refresh_token\n            }));\n            console.log(\"JWT access token is refreshed\"); \n            return true;\n        }\n\n        if (!response.ok) {\n            throw new Error(await response.json());\n        }\n    }\n    catch (error) {\n        console.log(\"JWT token refresh encountered an error\");\n        console.log(error); \n\n        return false; \n    }\n}"],"mappings":"AACA,eAAe,eAAeA,gBAAgBA,CAAEC,aAAa,EAAE;EAC3D,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACxB,yCAAyC,EACzC;MACIC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAG,gBAAeL,aAAc;IACxC,CACJ,CAAC;IAED,IAAIC,QAAQ,CAACK,EAAE,EAAE;MACb,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;MAClC;MACA;MACAC,YAAY,CAACC,OAAO,CAAC,KAAK,EAAEC,IAAI,CAACC,SAAS,CAAC;QACvC,QAAQ,EAAEL,IAAI,CAACM,MAAM;QACrB,SAAS,EAAEb;MACf,CAAC,CAAC,CAAC;MACHc,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;MAC5C,OAAO,IAAI;IACf;IAEA,IAAI,CAACd,QAAQ,CAACK,EAAE,EAAE;MACd,MAAM,IAAIU,KAAK,CAAC,MAAMf,QAAQ,CAACO,IAAI,CAAC,CAAC,CAAC;IAC1C;EACJ,CAAC,CACD,OAAOS,KAAK,EAAE;IACVH,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;IACrDD,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;IAElB,OAAO,KAAK;EAChB;AACJ;AAACC,EAAA,GAnC6BnB,gBAAgB;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}