{"ast":null,"code":"var _jsxFileName = \"/Users/yxni-mbp/Dropbox (Personal)/Startup/Accretion/Website/frontend/React_Accretion/accretion/src/user-auth/Login.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './user-auth.css';\n// import AuthJWT from './AuthJWT.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  // console.log(\"is authenticated: \", AuthJWT());\n\n  const [jwt, setJWT] = useState({\n    \"refresh\": \"\",\n    \"access\": \"\"\n  });\n  const [userData, setUserData] = useState({\n    \"username\": \"\",\n    \"password\": \"\"\n  });\n  const cleanUserData = () => {\n    setUserData({\n      \"username\": \"\",\n      \"password\": \"\"\n    });\n  };\n  const [loginError, setLoginError] = useState({});\n  const changeHandler = event => {\n    setUserData({\n      ...userData,\n      [event.target.name]: event.target.value\n    });\n    console.log(event.target.value);\n  };\n  const submitHandler = async event => {\n    event.preventDefault();\n    fetch('http://127.0.0.1:8000/auth/jwt/create/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(userData)\n    }).then(response => {\n      if (!response.ok) {\n        return response.json().then(data => {\n          throw new Error(JSON.stringify(data));\n        });\n      } else {\n        console.log(\"Successfully logged in!\");\n        // alert(\"Successfully logged in!\");\n        // cleanUserData();\n      }\n\n      return response.json();\n    }).then(data => {\n      setJWT(prevJWT => ({\n        // use asyn function to update state\n        ...prevJWT,\n        \"refresh\": data.refresh,\n        \"access\": data.access\n      }));\n      localStorage.setItem('jwt', JSON.stringify(jwt));\n    }).catch(error => {\n      console.log(error.message);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          onChange: changeHandler,\n          value: userData.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          onChange: changeHandler,\n          value: userData.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"cR/8YxlCMxlBbrPIleB6ogEBn1k=\");\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Login","_s","jwt","setJWT","userData","setUserData","cleanUserData","loginError","setLoginError","changeHandler","event","target","name","value","console","log","submitHandler","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","ok","json","data","Error","prevJWT","refresh","access","localStorage","setItem","catch","error","message","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","username","password","_c","$RefreshReg$"],"sources":["/Users/yxni-mbp/Dropbox (Personal)/Startup/Accretion/Website/frontend/React_Accretion/accretion/src/user-auth/Login.js"],"sourcesContent":["import { useState } from 'react';\nimport './user-auth.css';\n// import AuthJWT from './AuthJWT.js';\n\nexport default function Login () {\n\n    // console.log(\"is authenticated: \", AuthJWT());\n\n    const [jwt, setJWT] = useState({\n        \"refresh\": \"\",\n        \"access\": \"\"\n    });\n\n    const [userData, setUserData] = useState({\n        \"username\": \"\",\n        \"password\": \"\",\n    });\n\n    const cleanUserData = () => {\n        setUserData({\n            \"username\": \"\",\n            \"password\": \"\",\n        });\n    }\n\n    const [loginError, setLoginError] = useState({});\n    \n    const changeHandler = (event) => {\n        setUserData({\n            ...userData, \n            [event.target.name]: event.target.value\n        });\n        \n        console.log(event.target.value);\n    }\n\n    const submitHandler = async (event) => {\n        event.preventDefault();\n        \n        fetch('http://127.0.0.1:8000/auth/jwt/create/', {\n            method: 'POST', \n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(userData)\n        })\n        .then(response => {\n            if (!response.ok) {\n                return response.json()\n                .then(data => {throw new Error(JSON.stringify(data))})\n            } else {\n                console.log(\"Successfully logged in!\")\n                // alert(\"Successfully logged in!\");\n                // cleanUserData();\n            }\n            return response.json();\n        })\n        .then(data => {\n            setJWT((prevJWT) => ({ // use asyn function to update state\n                ...prevJWT, \n                \"refresh\": data.refresh,\n                \"access\": data.access\n            }))\n            localStorage.setItem('jwt', JSON.stringify(jwt));\n        })\n        .catch(error => {\n            console.log(error.message);\n        })\n    }    \n\n    return (\n        <div>\n            <form onSubmit={submitHandler}> \n                <div>\n                    <label>Username</label>  \n                    <input type=\"text\" name=\"username\" onChange={changeHandler} value={userData.username} />  \n                </div>\n                <div>\n                    <label>Password</label>  \n                    <input type=\"password\" name=\"password\" onChange={changeHandler} value={userData.password} />  \n                </div>\n                <button type=\"submit\">Login</button>   \n            </form>\n        </div>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}