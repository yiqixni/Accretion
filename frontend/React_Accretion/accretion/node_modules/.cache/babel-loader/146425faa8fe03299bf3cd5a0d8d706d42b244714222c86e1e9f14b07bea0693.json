{"ast":null,"code":"var _jsxFileName = \"/Users/yxni-mbp/Dropbox (Personal)/Startup/Accretion/Website/frontend/React_Accretion/accretion/src/database/StatementAnimation2.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport './Database.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst wordVariants = {\n  highlight: {\n    color: 'green',\n    // Highlight color when visible\n    opacity: 1,\n    fontSize: '20pt'\n  },\n  hidden: {\n    color: 'transparent',\n    // Hide the word initially\n    opacity: 0\n  }\n};\nconst StatementAnimation2 = () => {\n  _s();\n  const [currentWord, setCurrentWord] = useState('county clerks'); // Initial word\n  const words = ['county clerk', 'real estate attorney', 'title company', 'title insurer', 'REIT', 'for sale by owner', 'seasoned retail investor', 'first time home buyer']; // Words to cycle through\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      const nextIndex = (words.indexOf(currentWord) + 1) % words.length;\n      setCurrentWord(words[nextIndex]);\n    }, 500); // Change word duration \n\n    return () => clearInterval(intervalId); // Cleanup on unmount\n  }, [currentWord, words]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"statement-animation1\",\n      children: /*#__PURE__*/_jsxDEV(motion.span, {\n        animate: \"highlight\",\n        variants: wordVariants,\n        children: currentWord\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(StatementAnimation2, \"90qM5c1sKufyidSwPWZ6u8Ja3nc=\");\n_c = StatementAnimation2;\nexport default StatementAnimation2;\nvar _c;\n$RefreshReg$(_c, \"StatementAnimation2\");","map":{"version":3,"names":["React","useState","useEffect","motion","jsxDEV","_jsxDEV","wordVariants","highlight","color","opacity","fontSize","hidden","StatementAnimation2","_s","currentWord","setCurrentWord","words","intervalId","setInterval","nextIndex","indexOf","length","clearInterval","children","id","span","animate","variants","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yxni-mbp/Dropbox (Personal)/Startup/Accretion/Website/frontend/React_Accretion/accretion/src/database/StatementAnimation2.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport './Database.css';\n\nconst wordVariants = {\n    highlight: {\n      color: 'green', // Highlight color when visible\n      opacity: 1,\n      fontSize: '20pt',\n    },\n    hidden: {\n      color: 'transparent', // Hide the word initially\n      opacity: 0,\n    },\n};\n\n\nconst StatementAnimation2 = () => {\n  const [currentWord, setCurrentWord] = useState('county clerks'); // Initial word\n  const words = ['county clerk', \n                 'real estate attorney', \n                 'title company', \n                 'title insurer', \n                 'REIT', \n                 'for sale by owner', \n                 'seasoned retail investor',\n                 'first time home buyer',\n                ]; // Words to cycle through\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      const nextIndex = (words.indexOf(currentWord) + 1) % words.length;\n      setCurrentWord(words[nextIndex]);\n    }, 500); // Change word duration \n\n    return () => clearInterval(intervalId); // Cleanup on unmount\n  }, [currentWord, words]);\n\n  return (\n    <div>\n      <div id='statement-animation1'>\n        <motion.span animate=\"highlight\" variants={wordVariants}>\n            {currentWord}\n        </motion.span>\n      </div> \n      \n    </div>\n  );\n};\n\nexport default StatementAnimation2;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,QAAQ,eAAe;AACtC,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,YAAY,GAAG;EACjBC,SAAS,EAAE;IACTC,KAAK,EAAE,OAAO;IAAE;IAChBC,OAAO,EAAE,CAAC;IACVC,QAAQ,EAAE;EACZ,CAAC;EACDC,MAAM,EAAE;IACNH,KAAK,EAAE,aAAa;IAAE;IACtBC,OAAO,EAAE;EACX;AACJ,CAAC;AAGD,MAAMG,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,eAAe,CAAC,CAAC,CAAC;EACjE,MAAMe,KAAK,GAAG,CAAC,cAAc,EACd,sBAAsB,EACtB,eAAe,EACf,eAAe,EACf,MAAM,EACN,mBAAmB,EACnB,0BAA0B,EAC1B,uBAAuB,CACvB,CAAC,CAAC;;EAEjBd,SAAS,CAAC,MAAM;IACd,MAAMe,UAAU,GAAGC,WAAW,CAAC,MAAM;MACnC,MAAMC,SAAS,GAAG,CAACH,KAAK,CAACI,OAAO,CAACN,WAAW,CAAC,GAAG,CAAC,IAAIE,KAAK,CAACK,MAAM;MACjEN,cAAc,CAACC,KAAK,CAACG,SAAS,CAAC,CAAC;IAClC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;;IAET,OAAO,MAAMG,aAAa,CAACL,UAAU,CAAC,CAAC,CAAC;EAC1C,CAAC,EAAE,CAACH,WAAW,EAAEE,KAAK,CAAC,CAAC;EAExB,oBACEX,OAAA;IAAAkB,QAAA,eACElB,OAAA;MAAKmB,EAAE,EAAC,sBAAsB;MAAAD,QAAA,eAC5BlB,OAAA,CAACF,MAAM,CAACsB,IAAI;QAACC,OAAO,EAAC,WAAW;QAACC,QAAQ,EAAErB,YAAa;QAAAiB,QAAA,EACnDT;MAAW;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEH,CAAC;AAEV,CAAC;AAAClB,EAAA,CA/BID,mBAAmB;AAAAoB,EAAA,GAAnBpB,mBAAmB;AAiCzB,eAAeA,mBAAmB;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}