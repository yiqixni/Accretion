{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nexport default function AuthJWT() {\n  _s();\n  const [jwt, setJWT] = useState(JSON.parse(localStorage.getItem('jwt')));\n  const checkJWTaccess = async token => {\n    try {\n      const response = await fetch(\"http://localhost:8000/auth/users/\", {\n        method: 'GET',\n        headers: {\n          'Authorization': `JWT ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        console.log(\"JWT access token is valid\");\n        return true;\n      }\n      if (!response.ok) {\n        throw new Error(response.JSON());\n      }\n    } catch (error) {\n      console.log(\"JWT access token is invalid\");\n      console.log(error);\n      return false;\n    }\n  };\n  const checkJWTrefresh = async token => {\n    try {\n      const response = await fetch(\"localhost:8000/auth/jwt/refresh/\", {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(token)\n      });\n      if (response.ok) {\n        setJWT(prevJWT => ({\n          ...prevJWT,\n          \"access\": response.access\n        }));\n        return true;\n      }\n      if (!response.ok) {\n        throw new Error(response.JSON());\n      }\n    } catch (error) {\n      console.log(\"JWT refresh token is invalid, login again\");\n      console.log(error);\n      return false;\n    }\n  };\n  if (jwt) {\n    useEffect(() => {\n      console.log(\"JWT found in local storage\");\n      const isAccessValid = checkJWTaccess(jwt.access);\n      if (!isAccessValid) {\n        const isRefreshValid = checkJWTrefresh(jwt.refresh);\n        if (!isRefreshValid) {\n          return false;\n        } else {\n          return true;\n        }\n      }\n    }, []);\n  } else {\n    console.log(\"JWT not found in local storage\");\n    return false;\n  }\n}\n_s(AuthJWT, \"Czvkq8El9robzuLOcK30aD9R4Bw=\");\n_c = AuthJWT;\nvar _c;\n$RefreshReg$(_c, \"AuthJWT\");","map":{"version":3,"names":["useState","useEffect","AuthJWT","_s","jwt","setJWT","JSON","parse","localStorage","getItem","checkJWTaccess","token","response","fetch","method","headers","ok","console","log","Error","error","checkJWTrefresh","body","stringify","prevJWT","access","isAccessValid","isRefreshValid","refresh","_c","$RefreshReg$"],"sources":["/Users/yxni-mbp/Dropbox (Personal)/Startup/Accretion/Website/frontend/React_Accretion/accretion/src/user-auth/AuthJWT.js"],"sourcesContent":["import {useState, useEffect} from 'react';\n\nexport default function AuthJWT() {\n    const [jwt, setJWT] = useState(JSON.parse(localStorage.getItem('jwt')));\n    \n    const checkJWTaccess = async (token) => { \n        try {\n            const response = await fetch(\n                \"http://localhost:8000/auth/users/\", \n                {\n                    method: 'GET', \n                    headers: {\n                        'Authorization': `JWT ${token}`,\n                        'Content-Type': 'application/json'\n                }\n            })\n\n            if (response.ok) {\n                console.log(\"JWT access token is valid\");\n\n                return true; \n            }\n\n            if (!response.ok) {\n                throw new Error(response.JSON());\n            }\n        }\n        catch (error) {\n            console.log(\"JWT access token is invalid\");\n            console.log(error); \n\n            return false; \n        }\n    }\n\n    const checkJWTrefresh = async (token) => {\n        try{\n            const response = await fetch(\n                \"localhost:8000/auth/jwt/refresh/\",\n                {\n                    method: \"POST\", \n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify(token) \n                }\n            )\n            \n            if (response.ok) {\n                setJWT((prevJWT) => ({ \n                    ...prevJWT, \n                    \"access\": response.access\n                }));\n    \n                return true; \n            }\n\n            if (!response.ok) {\n                throw new Error(response.JSON());\n            }\n            \n        } \n        catch (error){\n            console.log(\"JWT refresh token is invalid, login again\");\n            console.log(error); \n\n            return false; \n        }\n    }\n\n    if (jwt) { \n        useEffect(() => {\n            console.log(\"JWT found in local storage\");\n\n            const isAccessValid = checkJWTaccess(jwt.access);\n            if (!isAccessValid) {\n                const isRefreshValid = checkJWTrefresh(jwt.refresh);\n                if (!isRefreshValid) {\n                    return false;\n                } else {\n                    return true;\n                }\n            }\n        },[]);\n\n    } else {\n        console.log(\"JWT not found in local storage\");\n\n        return false;\n    }\n}"],"mappings":";AAAA,SAAQA,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAEzC,eAAe,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGL,QAAQ,CAACM,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;EAEvE,MAAMC,cAAc,GAAG,MAAOC,KAAK,IAAK;IACpC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACxB,mCAAmC,EACnC;QACIC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACL,eAAe,EAAG,OAAMJ,KAAM,EAAC;UAC/B,cAAc,EAAE;QACxB;MACJ,CAAC,CAAC;MAEF,IAAIC,QAAQ,CAACI,EAAE,EAAE;QACbC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;QAExC,OAAO,IAAI;MACf;MAEA,IAAI,CAACN,QAAQ,CAACI,EAAE,EAAE;QACd,MAAM,IAAIG,KAAK,CAACP,QAAQ,CAACN,IAAI,CAAC,CAAC,CAAC;MACpC;IACJ,CAAC,CACD,OAAOc,KAAK,EAAE;MACVH,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;MAC1CD,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;MAElB,OAAO,KAAK;IAChB;EACJ,CAAC;EAED,MAAMC,eAAe,GAAG,MAAOV,KAAK,IAAK;IACrC,IAAG;MACC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACxB,kCAAkC,EAClC;QACIC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDO,IAAI,EAAEhB,IAAI,CAACiB,SAAS,CAACZ,KAAK;MAC9B,CACJ,CAAC;MAED,IAAIC,QAAQ,CAACI,EAAE,EAAE;QACbX,MAAM,CAAEmB,OAAO,KAAM;UACjB,GAAGA,OAAO;UACV,QAAQ,EAAEZ,QAAQ,CAACa;QACvB,CAAC,CAAC,CAAC;QAEH,OAAO,IAAI;MACf;MAEA,IAAI,CAACb,QAAQ,CAACI,EAAE,EAAE;QACd,MAAM,IAAIG,KAAK,CAACP,QAAQ,CAACN,IAAI,CAAC,CAAC,CAAC;MACpC;IAEJ,CAAC,CACD,OAAOc,KAAK,EAAC;MACTH,OAAO,CAACC,GAAG,CAAC,2CAA2C,CAAC;MACxDD,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;MAElB,OAAO,KAAK;IAChB;EACJ,CAAC;EAED,IAAIhB,GAAG,EAAE;IACLH,SAAS,CAAC,MAAM;MACZgB,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;MAEzC,MAAMQ,aAAa,GAAGhB,cAAc,CAACN,GAAG,CAACqB,MAAM,CAAC;MAChD,IAAI,CAACC,aAAa,EAAE;QAChB,MAAMC,cAAc,GAAGN,eAAe,CAACjB,GAAG,CAACwB,OAAO,CAAC;QACnD,IAAI,CAACD,cAAc,EAAE;UACjB,OAAO,KAAK;QAChB,CAAC,MAAM;UACH,OAAO,IAAI;QACf;MACJ;IACJ,CAAC,EAAC,EAAE,CAAC;EAET,CAAC,MAAM;IACHV,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;IAE7C,OAAO,KAAK;EAChB;AACJ;AAACf,EAAA,CAxFuBD,OAAO;AAAA2B,EAAA,GAAP3B,OAAO;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}