{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nexport default function AuthJWT() {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [jwt, setJWT] = useState(JSON.parse(localStorage.getItem('jwt')));\n  const checkJWT = async token => {\n    try {\n      const response = await fetch(\"http://localhost:8000/auth/users/\", {\n        method: 'GET',\n        headers: {\n          'Authorization': `JWT ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error(response.JSON());\n      }\n      if (response.ok) {\n        setIsAuthenticated(true);\n      }\n      return response.json();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  if (jwt) {\n    console.log(\"JWT exists\");\n    fetch(\"http://localhost:8000/auth/users/\", {\n      method: 'GET',\n      headers: {\n        'Authorization': `JWT ${jwt.access}`,\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      if (response.ok) {\n        setIsAuthenticated(true);\n      } else {\n        // refresh token \n        fetch(\"http://localhost:8000/auth/jwt/refresh/\", {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            \"refresh\": jwt.refresh\n          })\n        }).then(response => {\n          if (response.ok) {\n            console.log(\"successfully refreshed token\");\n            return response.json();\n          } else {\n            throw new Error(\"Failed to refresh token\");\n          }\n        }).then(data => {\n          setJWT(prevJWT => ({\n            ...prevJWT,\n            \"access\": data.access\n          }));\n          localStorage.setItem('jwt', JSON.stringify(jwt));\n        });\n      }\n    });\n  }\n  return isAuthenticated;\n}\n_s(AuthJWT, \"rHaUpzV/HCYewC7WOCMY+PHKYzY=\");\n_c = AuthJWT;\nvar _c;\n$RefreshReg$(_c, \"AuthJWT\");","map":{"version":3,"names":["useState","AuthJWT","_s","isAuthenticated","setIsAuthenticated","jwt","setJWT","JSON","parse","localStorage","getItem","checkJWT","token","response","fetch","method","headers","ok","Error","json","error","console","log","access","then","body","stringify","refresh","data","prevJWT","setItem","_c","$RefreshReg$"],"sources":["/Users/yxni-mbp/Dropbox (Personal)/Startup/Accretion/Website/frontend/React_Accretion/accretion/src/user-auth/AuthJWT.js"],"sourcesContent":["import {useState} from 'react';\n\nexport default function AuthJWT() {\n    \n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n    const [jwt, setJWT] = useState(JSON.parse(localStorage.getItem('jwt')));\n\n    const checkJWT = async (token) => { \n        try {\n            const response = await fetch(\"http://localhost:8000/auth/users/\", {\n                method: 'GET', \n                headers: {\n                    'Authorization': `JWT ${token}`,\n                    'Content-Type': 'application/json'\n                }\n            })\n\n            if (!response.ok) {\n                throw new Error(response.JSON()) \n            }\n            \n            if (response.ok) {\n                setIsAuthenticated(true);\n            }\n            \n            return response.json();\n        }\n        catch (error) {\n            console.log(error); \n        }\n    }\n\n    if (jwt) {\n        console.log(\"JWT exists\");\n        fetch(\"http://localhost:8000/auth/users/\", {\n            method: 'GET', \n            headers: {\n                'Authorization': `JWT ${jwt.access}`,\n                'Content-Type': 'application/json'\n            }\n        })\n        .then( response => {\n            if (response.ok) {\n                setIsAuthenticated(true);\n            } else {\n                // refresh token \n                fetch(\"http://localhost:8000/auth/jwt/refresh/\", {\n                    method: 'POST', \n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        \"refresh\": jwt.refresh\n                    })\n                })\n                .then( response => {\n                    if (response.ok) {\n                        console.log(\"successfully refreshed token\");\n                        return response.json();\n                    } else {\n                        throw new Error(\"Failed to refresh token\");\n                    }\n                })\n                .then( data => {\n                    setJWT((prevJWT) => ({\n                        ...prevJWT, \n                        \"access\": data.access\n                    }));\n                    localStorage.setItem('jwt', JSON.stringify(jwt));\n                })\n            }\n            })\n    }   \n\n    return isAuthenticated;\n}"],"mappings":";AAAA,SAAQA,QAAQ,QAAO,OAAO;AAE9B,eAAe,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAE9B,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGJ,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACK,GAAG,EAAEC,MAAM,CAAC,GAAGN,QAAQ,CAACO,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;EAEvE,MAAMC,QAAQ,GAAG,MAAOC,KAAK,IAAK;IAC9B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;QAC9DC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACL,eAAe,EAAG,OAAMJ,KAAM,EAAC;UAC/B,cAAc,EAAE;QACpB;MACJ,CAAC,CAAC;MAEF,IAAI,CAACC,QAAQ,CAACI,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAACL,QAAQ,CAACN,IAAI,CAAC,CAAC,CAAC;MACpC;MAEA,IAAIM,QAAQ,CAACI,EAAE,EAAE;QACbb,kBAAkB,CAAC,IAAI,CAAC;MAC5B;MAEA,OAAOS,QAAQ,CAACM,IAAI,CAAC,CAAC;IAC1B,CAAC,CACD,OAAOC,KAAK,EAAE;MACVC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACtB;EACJ,CAAC;EAED,IAAIf,GAAG,EAAE;IACLgB,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;IACzBR,KAAK,CAAC,mCAAmC,EAAE;MACvCC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,eAAe,EAAG,OAAMX,GAAG,CAACkB,MAAO,EAAC;QACpC,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC,CACDC,IAAI,CAAEX,QAAQ,IAAI;MACf,IAAIA,QAAQ,CAACI,EAAE,EAAE;QACbb,kBAAkB,CAAC,IAAI,CAAC;MAC5B,CAAC,MAAM;QACH;QACAU,KAAK,CAAC,yCAAyC,EAAE;UAC7CC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACL,cAAc,EAAE;UACpB,CAAC;UACDS,IAAI,EAAElB,IAAI,CAACmB,SAAS,CAAC;YACjB,SAAS,EAAErB,GAAG,CAACsB;UACnB,CAAC;QACL,CAAC,CAAC,CACDH,IAAI,CAAEX,QAAQ,IAAI;UACf,IAAIA,QAAQ,CAACI,EAAE,EAAE;YACbI,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;YAC3C,OAAOT,QAAQ,CAACM,IAAI,CAAC,CAAC;UAC1B,CAAC,MAAM;YACH,MAAM,IAAID,KAAK,CAAC,yBAAyB,CAAC;UAC9C;QACJ,CAAC,CAAC,CACDM,IAAI,CAAEI,IAAI,IAAI;UACXtB,MAAM,CAAEuB,OAAO,KAAM;YACjB,GAAGA,OAAO;YACV,QAAQ,EAAED,IAAI,CAACL;UACnB,CAAC,CAAC,CAAC;UACHd,YAAY,CAACqB,OAAO,CAAC,KAAK,EAAEvB,IAAI,CAACmB,SAAS,CAACrB,GAAG,CAAC,CAAC;QACpD,CAAC,CAAC;MACN;IACA,CAAC,CAAC;EACV;EAEA,OAAOF,eAAe;AAC1B;AAACD,EAAA,CAzEuBD,OAAO;AAAA8B,EAAA,GAAP9B,OAAO;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}