{"ast":null,"code":"/* \nReturns Login form if the user is not logged. \nOnce logged in successfully, the JWT access/refresh token will be stored in local storage.\n*/import{useState// useEffect \n}from'react';import{useAuth}from'./AuthContext';import Config from'../Config';import'./user-auth.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Login(){const{isLoggedIn,login}=useAuth();const[userData,setUserData]=useState({\"username\":\"\",\"password\":\"\"});const[loginErr,setLoginErr]=useState(false);const cleanUserData=()=>{setUserData({\"username\":\"\",\"password\":\"\"});};const changeHandler=event=>{setUserData({...userData,[event.target.name]:event.target.value});};const submitHandler=async event=>{event.preventDefault();try{const response=await fetch(Config.API_URL+\"auth/jwt/create/\",{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(userData)});if(!response.ok){const data=await response.json();throw new Error(JSON.stringify(data));}if(response.ok){const data=await response.json();localStorage.setItem('jwt',JSON.stringify({\"refresh\":data.refresh,\"access\":data.access}));cleanUserData();login();return true;}}catch(error){console.log(error.message);setLoginErr(true);return false;}};return/*#__PURE__*/_jsx(\"div\",{children:isLoggedIn?/*#__PURE__*/_jsx(\"h2\",{children:\"Welcome to Accretion, you are logged in\"}):/*#__PURE__*/_jsxs(\"form\",{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Username\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"username\",onChange:changeHandler,value:userData.username})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"password\",onChange:changeHandler,value:userData.password})]}),loginErr&&/*#__PURE__*/_jsx(\"p\",{id:\"error-message\",children:\"Loggin error: check your username or password\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Login\"})]})});}","map":{"version":3,"names":["useState","useAuth","Config","jsx","_jsx","jsxs","_jsxs","Login","isLoggedIn","login","userData","setUserData","loginErr","setLoginErr","cleanUserData","changeHandler","event","target","name","value","submitHandler","preventDefault","response","fetch","API_URL","method","headers","body","JSON","stringify","ok","data","json","Error","localStorage","setItem","refresh","access","error","console","log","message","children","onSubmit","type","onChange","username","password","id"],"sources":["/Users/yxni-mbp/Dropbox (Personal)/Startup/Accretion/Website/frontend/React_Accretion/accretion/src/user-auth/Login.js"],"sourcesContent":["/* \nReturns Login form if the user is not logged. \nOnce logged in successfully, the JWT access/refresh token will be stored in local storage.\n*/\n\nimport { \n        useState, \n        // useEffect \n    } from 'react';\nimport { useAuth } from './AuthContext'; \nimport Config from '../Config';\nimport './user-auth.css';\n\nexport default function Login () {\n\n    const { isLoggedIn, login } = useAuth(); \n    const [userData, setUserData] = useState({\n        \"username\": \"\",\n        \"password\": \"\",\n    });\n    const [loginErr, setLoginErr] = useState(false); \n\n    const cleanUserData = () => {\n        setUserData({\n            \"username\": \"\",\n            \"password\": \"\",\n        });\n    }\n    \n    const changeHandler = (event) => {\n        setUserData({\n            ...userData, \n            [event.target.name]: event.target.value\n        });\n    }\n\n    const submitHandler = async (event) => {\n        event.preventDefault();\n        \n        try {\n            const response = await fetch(\n                Config.API_URL + \"auth/jwt/create/\", \n                {\n                    method: 'POST', \n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify(userData)\n                }\n            )\n\n            if (!response.ok) {\n                const data = await response.json()\n                throw new Error(JSON.stringify(data));\n            }\n\n            if (response.ok) {\n                const data = await response.json(); \n                localStorage.setItem('jwt', JSON.stringify(\n                    {\n                        \"refresh\": data.refresh, \n                        \"access\": data.access\n                    }\n                ));\n                cleanUserData();\n                login();\n\n                return true; \n            }\n        } \n        catch (error) {\n            console.log(error.message); \n            setLoginErr(true); \n\n            return false; \n        }\n    }   \n\n    return (\n        <div>\n            {isLoggedIn ? \n                <h2>Welcome to Accretion, you are logged in</h2>\n                :\n                <form onSubmit={submitHandler}> \n                    <div>\n                        <label>Username</label>  \n                        <input type=\"text\" name=\"username\" onChange={changeHandler} value={userData.username} />  \n                    </div>\n                    <div>\n                        <label>Password</label>  \n                        <input type=\"password\" name=\"password\" onChange={changeHandler} value={userData.password} />  \n                    </div>\n                    {loginErr && \n                        <p id=\"error-message\">\n                            Loggin error: check your username or password\n                        </p>\n                    }\n                    <button type=\"submit\">Login</button>   \n                </form>\n            }\n        </div>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}