{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nexport default function AuthJWT() {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [jwt, setJWT] = useState(JSON.parse(localStorage.getItem('jwt')));\n  const checkJWT = token => {\n    fetch(\"http://localhost:8000/auth/jwt/verify/\", {\n      method: 'GET',\n      authentication: `JWT ${token}`\n    });\n  };\n  if (jwt) {\n    console.log(\"JWT exists\");\n    fetch(\"http://localhost:8000/auth/users/\", {\n      method: 'GET',\n      headers: {\n        'Authorization': `JWT abs`,\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      if (response.ok) {\n        console.log(\"authentication sucessful!\");\n      }\n      if (!response.ok) {\n        console.log(\"authentication failed!\");\n      }\n    });\n  }\n\n  // if (!jwt) {\n  //     console.log(\"JWT does not exist\");\n  // }\n\n  // console.log(\"jwt in localStorage: \", jwt);\n\n  return isAuthenticated;\n}\n_s(AuthJWT, \"rHaUpzV/HCYewC7WOCMY+PHKYzY=\");\n_c = AuthJWT;\nvar _c;\n$RefreshReg$(_c, \"AuthJWT\");","map":{"version":3,"names":["useState","AuthJWT","_s","isAuthenticated","setIsAuthenticated","jwt","setJWT","JSON","parse","localStorage","getItem","checkJWT","token","fetch","method","authentication","console","log","headers","then","response","ok","_c","$RefreshReg$"],"sources":["/Users/yxni-mbp/Dropbox (Personal)/Startup/Accretion/Website/frontend/React_Accretion/accretion/src/user-auth/AuthJWT.js"],"sourcesContent":["import {useState} from 'react';\n\nexport default function AuthJWT() {\n    \n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n    const [jwt, setJWT] = useState(JSON.parse(localStorage.getItem('jwt')));\n\n    const checkJWT = (token) => {\n        fetch(\"http://localhost:8000/auth/jwt/verify/\", {\n            method: 'GET', \n            authentication: `JWT ${token}`\n        })\n    }\n\n    if (jwt) {\n        console.log(\"JWT exists\");\n        fetch(\"http://localhost:8000/auth/users/\", {\n            method: 'GET', \n            headers: {\n                'Authorization': `JWT abs`,\n                'Content-Type': 'application/json'\n            }\n        })\n        .then( response => {\n            if (response.ok) {\n                console.log(\"authentication sucessful!\")\n            }\n            if (!response.ok) {\n                console.log(\"authentication failed!\")\n            }\n        })\n        \n    }\n\n    // if (!jwt) {\n    //     console.log(\"JWT does not exist\");\n    // }\n\n    // console.log(\"jwt in localStorage: \", jwt);\n\n    return isAuthenticated;\n}"],"mappings":";AAAA,SAAQA,QAAQ,QAAO,OAAO;AAE9B,eAAe,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAE9B,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGJ,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACK,GAAG,EAAEC,MAAM,CAAC,GAAGN,QAAQ,CAACO,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;EAEvE,MAAMC,QAAQ,GAAIC,KAAK,IAAK;IACxBC,KAAK,CAAC,wCAAwC,EAAE;MAC5CC,MAAM,EAAE,KAAK;MACbC,cAAc,EAAG,OAAMH,KAAM;IACjC,CAAC,CAAC;EACN,CAAC;EAED,IAAIP,GAAG,EAAE;IACLW,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;IACzBJ,KAAK,CAAC,mCAAmC,EAAE;MACvCC,MAAM,EAAE,KAAK;MACbI,OAAO,EAAE;QACL,eAAe,EAAG,SAAQ;QAC1B,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC,CACDC,IAAI,CAAEC,QAAQ,IAAI;MACf,IAAIA,QAAQ,CAACC,EAAE,EAAE;QACbL,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;MAC5C;MACA,IAAI,CAACG,QAAQ,CAACC,EAAE,EAAE;QACdL,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;MACzC;IACJ,CAAC,CAAC;EAEN;;EAEA;EACA;EACA;;EAEA;;EAEA,OAAOd,eAAe;AAC1B;AAACD,EAAA,CAvCuBD,OAAO;AAAAqB,EAAA,GAAPrB,OAAO;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}