{"ast":null,"code":"var _jsxFileName = \"/Users/yxni-mbp/Dropbox (Personal)/Startup/Accretion/Website/frontend/React_Accretion/accretion/src/home/Mission_animation.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport './Home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst wordVariants = {\n  highlight: {\n    color: 'red',\n    // Highlight color when visible\n    opacity: 1\n  },\n  hidden: {\n    color: 'transparent',\n    // Hide the word initially\n    opacity: 0\n  }\n};\nconst Sentence = () => {\n  _s();\n  const [currentWord, setCurrentWord] = useState('real estate experts'); // Initial word\n  const words = ['real estate experts', 'everyone to become real estate experts']; // Words to cycle through\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      const nextIndex = (words.indexOf(currentWord) + 1) % words.length;\n      setCurrentWord(words[nextIndex]);\n    }, 3000); // Change word every 3 seconds\n\n    return () => clearInterval(intervalId); // Cleanup on unmount\n  }, [currentWord, words]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Building a modern database for \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(motion.span, {\n        animate: \"highlight\",\n        variants: wordVariants,\n        children: currentWord\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(Sentence, \"wNOxx5iVDgU6ctccG0XOf+HAxVc=\");\n_c = Sentence;\nexport default Sentence;\nvar _c;\n$RefreshReg$(_c, \"Sentence\");","map":{"version":3,"names":["React","useState","useEffect","motion","jsxDEV","_jsxDEV","wordVariants","highlight","color","opacity","hidden","Sentence","_s","currentWord","setCurrentWord","words","intervalId","setInterval","nextIndex","indexOf","length","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","span","animate","variants","_c","$RefreshReg$"],"sources":["/Users/yxni-mbp/Dropbox (Personal)/Startup/Accretion/Website/frontend/React_Accretion/accretion/src/home/Mission_animation.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport './Home.css';\n\nconst wordVariants = {\n    highlight: {\n      color: 'red', // Highlight color when visible\n      opacity: 1,\n    },\n    hidden: {\n      color: 'transparent', // Hide the word initially\n      opacity: 0,\n    },\n  };\n\n\nconst Sentence = () => {\n  const [currentWord, setCurrentWord] = useState('real estate experts'); // Initial word\n  const words = ['real estate experts', 'everyone to become real estate experts']; // Words to cycle through\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      const nextIndex = (words.indexOf(currentWord) + 1) % words.length;\n      setCurrentWord(words[nextIndex]);\n    }, 3000); // Change word every 3 seconds\n\n    return () => clearInterval(intervalId); // Cleanup on unmount\n  }, [currentWord, words]);\n\n  return (\n    <div>\n      <h3>Building a modern database for </h3>\n      <div>\n      <motion.span animate=\"highlight\" variants={wordVariants}>\n        {currentWord}\n      </motion.span>\n      </div> \n      \n    </div>\n  );\n};\n\nexport default Sentence;\n  "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,QAAQ,eAAe;AACtC,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,YAAY,GAAG;EACjBC,SAAS,EAAE;IACTC,KAAK,EAAE,KAAK;IAAE;IACdC,OAAO,EAAE;EACX,CAAC;EACDC,MAAM,EAAE;IACNF,KAAK,EAAE,aAAa;IAAE;IACtBC,OAAO,EAAE;EACX;AACF,CAAC;AAGH,MAAME,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,qBAAqB,CAAC,CAAC,CAAC;EACvE,MAAMc,KAAK,GAAG,CAAC,qBAAqB,EAAE,wCAAwC,CAAC,CAAC,CAAC;;EAEjFb,SAAS,CAAC,MAAM;IACd,MAAMc,UAAU,GAAGC,WAAW,CAAC,MAAM;MACnC,MAAMC,SAAS,GAAG,CAACH,KAAK,CAACI,OAAO,CAACN,WAAW,CAAC,GAAG,CAAC,IAAIE,KAAK,CAACK,MAAM;MACjEN,cAAc,CAACC,KAAK,CAACG,SAAS,CAAC,CAAC;IAClC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;;IAEV,OAAO,MAAMG,aAAa,CAACL,UAAU,CAAC,CAAC,CAAC;EAC1C,CAAC,EAAE,CAACH,WAAW,EAAEE,KAAK,CAAC,CAAC;EAExB,oBACEV,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,EAAI;IAA+B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxCrB,OAAA;MAAAiB,QAAA,eACAjB,OAAA,CAACF,MAAM,CAACwB,IAAI;QAACC,OAAO,EAAC,WAAW;QAACC,QAAQ,EAAEvB,YAAa;QAAAgB,QAAA,EACrDT;MAAW;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEH,CAAC;AAEV,CAAC;AAACd,EAAA,CAxBID,QAAQ;AAAAmB,EAAA,GAARnB,QAAQ;AA0Bd,eAAeA,QAAQ;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}