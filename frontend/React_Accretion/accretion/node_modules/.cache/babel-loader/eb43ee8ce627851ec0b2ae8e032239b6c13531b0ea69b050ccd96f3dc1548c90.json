{"ast":null,"code":"import Config from\"../Config\";export default async function RefreshJWTaccess(refresh_token){try{const response=await fetch(Config.API_URL+\"auth/jwt/refresh/\",{method:'POST',headers:{'Content-Type':'application/json'},body:\"{\\\"refresh\\\": \\\"\".concat(refresh_token,\"\\\"}\")});if(response.ok){const data=await response.json();// save access and refresh token to local storage\nlocalStorage.setItem('jwt',JSON.stringify({\"access\":data.access,\"refresh\":refresh_token}));console.log(\"JWT access token is refreshed\");return true;}if(!response.ok){const data=await response.json();throw new Error(JSON.stringify(data));}}catch(error){console.log(\"JWT token refresh encountered an error\");console.log(error);return false;}}","map":{"version":3,"names":["Config","RefreshJWTaccess","refresh_token","response","fetch","API_URL","method","headers","body","concat","ok","data","json","localStorage","setItem","JSON","stringify","access","console","log","Error","error"],"sources":["/Users/yxni-mbp/Dropbox (Personal)/Startup/Accretion/Website/frontend/React_Accretion/accretion/src/user-auth/RefreshJWTaccess.js"],"sourcesContent":["import Config from \"../Config\";\n\nexport default async function RefreshJWTaccess (refresh_token) { \n    try {\n        const response = await fetch(\n            Config.API_URL + \"auth/jwt/refresh/\", \n            {\n                method: 'POST', \n                headers: {\n                    'Content-Type': 'application/json'\n                }, \n                body: `{\"refresh\": \"${refresh_token}\"}`\n            }\n        );\n\n        if (response.ok) {\n            const data = await response.json(); \n            // save access and refresh token to local storage\n            localStorage.setItem('jwt', JSON.stringify({\n                \"access\": data.access, \n                \"refresh\": refresh_token\n            }));\n            console.log(\"JWT access token is refreshed\"); \n            return true;\n        }\n\n        if (!response.ok) {\n            const data = await response.json();\n            throw new Error(JSON.stringify(data));\n        }\n    }\n    catch (error) {\n        console.log(\"JWT token refresh encountered an error\");\n        console.log(error); \n\n        return false; \n    }\n}"],"mappings":"AAAA,MAAO,CAAAA,MAAM,KAAM,WAAW,CAE9B,cAAe,eAAe,CAAAC,gBAAgBA,CAAEC,aAAa,CAAE,CAC3D,GAAI,CACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CACxBJ,MAAM,CAACK,OAAO,CAAG,mBAAmB,CACpC,CACIC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACL,cAAc,CAAE,kBACpB,CAAC,CACDC,IAAI,oBAAAC,MAAA,CAAkBP,aAAa,OACvC,CACJ,CAAC,CAED,GAAIC,QAAQ,CAACO,EAAE,CAAE,CACb,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAR,QAAQ,CAACS,IAAI,CAAC,CAAC,CAClC;AACAC,YAAY,CAACC,OAAO,CAAC,KAAK,CAAEC,IAAI,CAACC,SAAS,CAAC,CACvC,QAAQ,CAAEL,IAAI,CAACM,MAAM,CACrB,SAAS,CAAEf,aACf,CAAC,CAAC,CAAC,CACHgB,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC,CAC5C,MAAO,KAAI,CACf,CAEA,GAAI,CAAChB,QAAQ,CAACO,EAAE,CAAE,CACd,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAR,QAAQ,CAACS,IAAI,CAAC,CAAC,CAClC,KAAM,IAAI,CAAAQ,KAAK,CAACL,IAAI,CAACC,SAAS,CAACL,IAAI,CAAC,CAAC,CACzC,CACJ,CACA,MAAOU,KAAK,CAAE,CACVH,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC,CACrDD,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC,CAElB,MAAO,MAAK,CAChB,CACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}