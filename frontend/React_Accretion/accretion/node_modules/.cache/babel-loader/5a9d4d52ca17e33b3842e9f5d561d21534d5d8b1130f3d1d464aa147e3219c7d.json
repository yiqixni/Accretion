{"ast":null,"code":"import Config from \"../Config\";\nexport default async function RefreshJWTaccess(refresh_token) {\n  try {\n    const response = await fetch(Config.API_URL + \"auth/jwt/refresh/\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: `{\"refresh\": \"${refresh_token}\"}`\n    });\n    if (response.ok) {\n      const data = await response.json();\n      // save access and refresh token to local storage\n      localStorage.setItem('jwt', JSON.stringify({\n        \"access\": data.access,\n        \"refresh\": refresh_token\n      }));\n      console.log(\"JWT access token is refreshed\");\n      return true;\n    }\n    if (!response.ok) {\n      const data = await response.json();\n      throw new Error(JSON.stringify(data));\n    }\n  } catch (error) {\n    console.log(\"JWT token refresh encountered an error\");\n    console.log(error);\n    return false;\n  }\n}\n_c = RefreshJWTaccess;\nvar _c;\n$RefreshReg$(_c, \"RefreshJWTaccess\");","map":{"version":3,"names":["Config","RefreshJWTaccess","refresh_token","response","fetch","API_URL","method","headers","body","ok","data","json","localStorage","setItem","JSON","stringify","access","console","log","Error","error","_c","$RefreshReg$"],"sources":["/Users/yxni-mbp/Dropbox (Personal)/Startup/Accretion/Website/frontend/React_Accretion/accretion/src/user-auth/RefreshJWTaccess.js"],"sourcesContent":["import Config from \"../Config\";\n\nexport default async function RefreshJWTaccess (refresh_token) { \n    try {\n        const response = await fetch(\n            Config.API_URL + \"auth/jwt/refresh/\", \n            {\n                method: 'POST', \n                headers: {\n                    'Content-Type': 'application/json'\n                }, \n                body: `{\"refresh\": \"${refresh_token}\"}`\n            }\n        );\n\n        if (response.ok) {\n            const data = await response.json(); \n            // save access and refresh token to local storage\n            localStorage.setItem('jwt', JSON.stringify({\n                \"access\": data.access, \n                \"refresh\": refresh_token\n            }));\n            console.log(\"JWT access token is refreshed\"); \n            return true;\n        }\n\n        if (!response.ok) {\n            const data = await response.json();\n            throw new Error(JSON.stringify(data));\n        }\n    }\n    catch (error) {\n        console.log(\"JWT token refresh encountered an error\");\n        console.log(error); \n\n        return false; \n    }\n}"],"mappings":"AAAA,OAAOA,MAAM,MAAM,WAAW;AAE9B,eAAe,eAAeC,gBAAgBA,CAAEC,aAAa,EAAE;EAC3D,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACxBJ,MAAM,CAACK,OAAO,GAAG,mBAAmB,EACpC;MACIC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAG,gBAAeN,aAAc;IACxC,CACJ,CAAC;IAED,IAAIC,QAAQ,CAACM,EAAE,EAAE;MACb,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAClC;MACAC,YAAY,CAACC,OAAO,CAAC,KAAK,EAAEC,IAAI,CAACC,SAAS,CAAC;QACvC,QAAQ,EAAEL,IAAI,CAACM,MAAM;QACrB,SAAS,EAAEd;MACf,CAAC,CAAC,CAAC;MACHe,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;MAC5C,OAAO,IAAI;IACf;IAEA,IAAI,CAACf,QAAQ,CAACM,EAAE,EAAE;MACd,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAClC,MAAM,IAAIQ,KAAK,CAACL,IAAI,CAACC,SAAS,CAACL,IAAI,CAAC,CAAC;IACzC;EACJ,CAAC,CACD,OAAOU,KAAK,EAAE;IACVH,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;IACrDD,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;IAElB,OAAO,KAAK;EAChB;AACJ;AAACC,EAAA,GAnC6BpB,gBAAgB;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}