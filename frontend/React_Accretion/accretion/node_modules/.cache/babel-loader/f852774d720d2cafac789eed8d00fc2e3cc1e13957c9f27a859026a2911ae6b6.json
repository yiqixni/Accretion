{"ast":null,"code":"/* \nAuthenticate user by check JWT access token, refresh the access the access token if invalid\n*/import{useEffect}from'react';import{useAuth}from'./AuthContext';import CheckJWTaccess from'./CheckJWTaccess';import RefreshJWTaccess from'./RefreshJWTaccess';export default async function AuthJWT(){const{isLoggedIn,login}=useAuth();if(isLoggedIn){return true;}const jwt=JSON.parse(localStorage.getItem('jwt'));useEffect(()=>{if(jwt&&jwt.access!=\"\"&&jwt.refresh!=\"\"){console.log(\"JWT token is found in local storage \");CheckJWTaccess(jwt.access).then(response=>{console.log(\"checkJWTaccess response: \",response);if(response==true){console.log(\"JWT access token is valid\");login();}else{console.log(\"JWT access token is invalid, try to refresh\");// try to refresh the JWT access token \nRefreshJWTaccess(jwt.refresh).then(response=>{if(response){login();}}).catch(error=>{console.log(\"refresh token failed\");console.log(error);});}}).catch(error=>{console.log(\"validate JWT access token failed\");console.log(error);});}},[]);}","map":{"version":3,"names":["useEffect","useAuth","CheckJWTaccess","RefreshJWTaccess","AuthJWT","isLoggedIn","login","jwt","JSON","parse","localStorage","getItem","access","refresh","console","log","then","response","catch","error"],"sources":["/Users/yxni-mbp/Dropbox (Personal)/Startup/Accretion/Website/frontend/React_Accretion/accretion/src/user-auth/AuthJWT.js"],"sourcesContent":["/* \nAuthenticate user by check JWT access token, refresh the access the access token if invalid\n*/\n\nimport { useEffect } from 'react';\nimport { useAuth } from './AuthContext'; \n\nimport CheckJWTaccess from './CheckJWTaccess'; \nimport RefreshJWTaccess from './RefreshJWTaccess';\n\nexport default async function AuthJWT() {\n    const { isLoggedIn, login } = useAuth(); \n\n    if (isLoggedIn) {\n        return true; \n    }\n    \n    const jwt = JSON.parse(localStorage.getItem('jwt')); \n\n    useEffect(() => {\n        if (jwt && jwt.access != \"\" && jwt.refresh != \"\") {\n            console.log(\"JWT token is found in local storage \");\n            CheckJWTaccess(jwt.access) \n            .then( response => {\n                console.log(\"checkJWTaccess response: \", response);\n                if (response == true) {\n                    console.log(\"JWT access token is valid\");\n                    login(); \n                } else { \n                    console.log(\"JWT access token is invalid, try to refresh\");\n                    // try to refresh the JWT access token \n                    RefreshJWTaccess(jwt.refresh)\n                    .then( response => {\n                        if (response) {\n                            login();\n                        }\n                    })\n                    .catch( (error) => {\n                        console.log(\"refresh token failed\");\n                        console.log(error);\n                    })\n                }\n            })\n            .catch((error) => {\n                console.log(\"validate JWT access token failed\");\n                console.log(error);\n            })\n        }\n    },[]);\n}"],"mappings":"AAAA;AACA;AACA,EAEA,OAASA,SAAS,KAAQ,OAAO,CACjC,OAASC,OAAO,KAAQ,eAAe,CAEvC,MAAO,CAAAC,cAAc,KAAM,kBAAkB,CAC7C,MAAO,CAAAC,gBAAgB,KAAM,oBAAoB,CAEjD,cAAe,eAAe,CAAAC,OAAOA,CAAA,CAAG,CACpC,KAAM,CAAEC,UAAU,CAAEC,KAAM,CAAC,CAAGL,OAAO,CAAC,CAAC,CAEvC,GAAII,UAAU,CAAE,CACZ,MAAO,KAAI,CACf,CAEA,KAAM,CAAAE,GAAG,CAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,KAAK,CAAC,CAAC,CAEnDX,SAAS,CAAC,IAAM,CACZ,GAAIO,GAAG,EAAIA,GAAG,CAACK,MAAM,EAAI,EAAE,EAAIL,GAAG,CAACM,OAAO,EAAI,EAAE,CAAE,CAC9CC,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC,CACnDb,cAAc,CAACK,GAAG,CAACK,MAAM,CAAC,CACzBI,IAAI,CAAEC,QAAQ,EAAI,CACfH,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAEE,QAAQ,CAAC,CAClD,GAAIA,QAAQ,EAAI,IAAI,CAAE,CAClBH,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC,CACxCT,KAAK,CAAC,CAAC,CACX,CAAC,IAAM,CACHQ,OAAO,CAACC,GAAG,CAAC,6CAA6C,CAAC,CAC1D;AACAZ,gBAAgB,CAACI,GAAG,CAACM,OAAO,CAAC,CAC5BG,IAAI,CAAEC,QAAQ,EAAI,CACf,GAAIA,QAAQ,CAAE,CACVX,KAAK,CAAC,CAAC,CACX,CACJ,CAAC,CAAC,CACDY,KAAK,CAAGC,KAAK,EAAK,CACfL,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC,CACnCD,OAAO,CAACC,GAAG,CAACI,KAAK,CAAC,CACtB,CAAC,CAAC,CACN,CACJ,CAAC,CAAC,CACDD,KAAK,CAAEC,KAAK,EAAK,CACdL,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC,CAC/CD,OAAO,CAACC,GAAG,CAACI,KAAK,CAAC,CACtB,CAAC,CAAC,CACN,CACJ,CAAC,CAAC,EAAE,CAAC,CACT"},"metadata":{},"sourceType":"module","externalDependencies":[]}