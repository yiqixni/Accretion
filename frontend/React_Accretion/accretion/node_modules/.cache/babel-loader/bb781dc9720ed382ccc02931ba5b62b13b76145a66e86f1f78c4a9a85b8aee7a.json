{"ast":null,"code":"var _jsxFileName = \"/Users/yxni-mbp/Dropbox (Personal)/Startup/Accretion/Website/frontend/React_Accretion/accretion/src/user-auth/Login.js\",\n  _s2 = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport './user-auth.css';\n// import AuthJWT from './AuthJWT.js';\n\nimport { useAuth } from './AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s2();\n  var _s = $RefreshSig$();\n  const {\n    isLoggedIn,\n    login\n  } = useAuth();\n  if (isLoggedIn) {\n    console.log(\"Login: already logged in\");\n  }\n  const [userData, setUserData] = useState({\n    \"username\": \"\",\n    \"password\": \"\"\n  });\n  const cleanUserData = () => {\n    setUserData({\n      \"username\": \"\",\n      \"password\": \"\"\n    });\n  };\n\n  // const [loginError, setLoginError] = useState({});\n\n  const changeHandler = event => {\n    setUserData({\n      ...userData,\n      [event.target.name]: event.target.value\n    });\n  };\n  const submitHandler = async event => {\n    _s();\n    event.preventDefault();\n    useEffect(() => {\n      const getJWT = async () => {\n        try {\n          const response = await fetch('http://127.0.0.1:8000/auth/jwt/create/', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(userData)\n          });\n          if (!response.ok) {\n            throw new Error(await response.json());\n          }\n          if (response.ok) {\n            const data = await response.json();\n            localStorage.setItem('jwt', JSON.stringify({\n              \"refresh\": data.refresh,\n              \"access\": data.access\n            }));\n            cleanUserData();\n            login();\n            return true;\n          }\n        } catch (error) {\n          console.log(error);\n          return false;\n        }\n      };\n      getJWT();\n    });\n  };\n\n  // const submitHandler = async (event) => {\n  //     event.preventDefault();\n\n  //     try {\n  //         const response = await fetch(\n  //             'http://127.0.0.1:8000/auth/jwt/create/', \n  //             {\n  //                 method: 'POST', \n  //                 headers: {\n  //                     'Content-Type': 'application/json'\n  //                 },\n  //                 body: JSON.stringify(userData)\n  //             }\n  //         )\n\n  //         if (!response.ok) {\n  //             throw new Error(await response.json());\n  //         }\n\n  //         if (response.ok) {\n  //             const data = await response.json(); \n  //             localStorage.setItem('jwt', JSON.stringify(\n  //                 {\n  //                     \"refresh\": data.refresh, \n  //                     \"access\": data.access\n  //                 }\n  //             ));\n  //             cleanUserData();\n  //             login();\n\n  //             return true; \n  //         }\n  //     } \n  //     catch (error) {\n  //         console.log(error); \n  //         return false; \n  //     }\n  // }   \n  _s(submitHandler, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          onChange: changeHandler,\n          value: userData.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          onChange: changeHandler,\n          value: userData.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 9\n  }, this);\n}\n_s2(Login, \"zHetKtGo+77s23arcEku3ebjzHQ=\", false, function () {\n  return [useAuth];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","useEffect","useAuth","jsxDEV","_jsxDEV","Login","_s2","_s","$RefreshSig$","isLoggedIn","login","console","log","userData","setUserData","cleanUserData","changeHandler","event","target","name","value","submitHandler","preventDefault","getJWT","response","fetch","method","headers","body","JSON","stringify","ok","Error","json","data","localStorage","setItem","refresh","access","error","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","username","password","_c","$RefreshReg$"],"sources":["/Users/yxni-mbp/Dropbox (Personal)/Startup/Accretion/Website/frontend/React_Accretion/accretion/src/user-auth/Login.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport './user-auth.css';\n// import AuthJWT from './AuthJWT.js';\n\nimport { useAuth } from './AuthContext'; \n\nexport default function Login () {\n\n    const { isLoggedIn, login } = useAuth(); \n\n    if (isLoggedIn) {\n        console.log(\"Login: already logged in\"); \n    }\n\n    const [userData, setUserData] = useState({\n        \"username\": \"\",\n        \"password\": \"\",\n    });\n\n    const cleanUserData = () => {\n        setUserData({\n            \"username\": \"\",\n            \"password\": \"\",\n        });\n    }\n\n    // const [loginError, setLoginError] = useState({});\n    \n    const changeHandler = (event) => {\n        setUserData({\n            ...userData, \n            [event.target.name]: event.target.value\n        });\n    }\n\n    const submitHandler = async (event) => {\n        event.preventDefault();\n        \n        useEffect(() => {\n            const getJWT = async () => {\n                try {\n                    const response = await fetch(\n                        'http://127.0.0.1:8000/auth/jwt/create/', \n                        {\n                            method: 'POST', \n                            headers: {\n                                'Content-Type': 'application/json'\n                            },\n                            body: JSON.stringify(userData)\n                        }\n                    )\n        \n                    if (!response.ok) {\n                        throw new Error(await response.json());\n                    }\n        \n                    if (response.ok) {\n                        const data = await response.json(); \n                        localStorage.setItem('jwt', JSON.stringify(\n                            {\n                                \"refresh\": data.refresh, \n                                \"access\": data.access\n                            }\n                        ));\n                        cleanUserData();\n                        login();\n        \n                        return true; \n                    }\n                } \n                catch (error) {\n                    console.log(error); \n                    return false; \n                }\n            }\n\n            getJWT(); \n        })\n    }   \n\n    // const submitHandler = async (event) => {\n    //     event.preventDefault();\n        \n    //     try {\n    //         const response = await fetch(\n    //             'http://127.0.0.1:8000/auth/jwt/create/', \n    //             {\n    //                 method: 'POST', \n    //                 headers: {\n    //                     'Content-Type': 'application/json'\n    //                 },\n    //                 body: JSON.stringify(userData)\n    //             }\n    //         )\n\n    //         if (!response.ok) {\n    //             throw new Error(await response.json());\n    //         }\n\n    //         if (response.ok) {\n    //             const data = await response.json(); \n    //             localStorage.setItem('jwt', JSON.stringify(\n    //                 {\n    //                     \"refresh\": data.refresh, \n    //                     \"access\": data.access\n    //                 }\n    //             ));\n    //             cleanUserData();\n    //             login();\n\n    //             return true; \n    //         }\n    //     } \n    //     catch (error) {\n    //         console.log(error); \n    //         return false; \n    //     }\n    // }   \n\n    return (\n        <div>\n            <form onSubmit={submitHandler}> \n                <div>\n                    <label>Username</label>  \n                    <input type=\"text\" name=\"username\" onChange={changeHandler} value={userData.username} />  \n                </div>\n                <div>\n                    <label>Password</label>  \n                    <input type=\"password\" name=\"password\" onChange={changeHandler} value={userData.password} />  \n                </div>\n                <button type=\"submit\">Login</button>   \n            </form>\n        </div>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}