{"ast":null,"code":"var _jsxFileName = \"/Users/yxni-mbp/Dropbox (Personal)/Startup/Accretion/Website/frontend/React_Accretion/accretion/src/sell/SellerView.js\",\n  _s = $RefreshSig$();\n/* \nSellerView get seller uploaded property an owner view \n*/\n\nimport { useEffect, useState } from 'react';\nimport './PropertyView.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SellerView() {\n  _s();\n  const [propertyData, setPropertyData] = useState([]);\n  const jwt = JSON.parse(localStorage.getItem(\"jwt\"));\n  useEffect(() => {\n    const getSellerProperty = async () => {\n      try {\n        const response = await fetch(\"http://127.0.0.1:8000/api/sell\", {\n          method: \"GET\",\n          headers: {\n            \"Authorization\": `JWT ${jwt.access}`\n          }\n        });\n        const data = await response.json();\n        setPropertyData(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getSellerProperty();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Seller upload properties show up here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"property-grid\",\n      children: propertyData.map((propertyInfo, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"property-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: propertyInfo.images[0].image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Address: \", propertyInfo.address]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 28\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n_s(SellerView, \"H/+bQYNMC9eCgUlfmmI/LGra5O4=\");\n_c = SellerView;\nvar _c;\n$RefreshReg$(_c, \"SellerView\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","SellerView","_s","propertyData","setPropertyData","jwt","JSON","parse","localStorage","getItem","getSellerProperty","response","fetch","method","headers","access","data","json","error","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","propertyInfo","index","src","images","image","address","_c","$RefreshReg$"],"sources":["/Users/yxni-mbp/Dropbox (Personal)/Startup/Accretion/Website/frontend/React_Accretion/accretion/src/sell/SellerView.js"],"sourcesContent":["/* \nSellerView get seller uploaded property an owner view \n*/\n\nimport { useEffect, useState } from 'react'; \nimport './PropertyView.css'\n\nexport default function SellerView () {\n    const [propertyData, setPropertyData] = useState([]);\n    const jwt = JSON.parse(localStorage.getItem(\"jwt\")); \n    \n    useEffect(() => {\n        const getSellerProperty = async () => {\n            try {\n                const response = await fetch(\n                    \"http://127.0.0.1:8000/api/sell\", \n                    {\n                        method: \"GET\", \n                        headers: {\n                            \"Authorization\": `JWT ${jwt.access}` \n                        }\n                    }\n                )\n                const data = await response.json(); \n                setPropertyData(data); \n            } \n            catch (error) {\n                console.log(error)\n            }\n        }\n\n        getSellerProperty(); \n        \n        \n\n    },[])\n    \n\n    return (\n        <div>\n            <h1>Seller upload properties show up here</h1>\n            <div className=\"property-grid\">\n                {\n                    propertyData.map((propertyInfo, index)=>(\n                        <div className=\"property-card\" key={index}>\n                           <img src={propertyInfo.images[0].image}/>\n                           <p>Address: {propertyInfo.address}</p>\n                        </div>\n                    ))\n                }\n            </div>\n            \n        </div>\n    )\n}"],"mappings":";;AAAA;AACA;AACA;;AAEA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAO,oBAAoB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3B,eAAe,SAASC,UAAUA,CAAA,EAAI;EAAAC,EAAA;EAClC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAMO,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,KAAK,CAAC,CAAC;EAEnDZ,SAAS,CAAC,MAAM;IACZ,MAAMa,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACxB,gCAAgC,EAChC;UACIC,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACL,eAAe,EAAG,OAAMT,GAAG,CAACU,MAAO;UACvC;QACJ,CACJ,CAAC;QACD,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QAClCb,eAAe,CAACY,IAAI,CAAC;MACzB,CAAC,CACD,OAAOE,KAAK,EAAE;QACVC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACtB;IACJ,CAAC;IAEDR,iBAAiB,CAAC,CAAC;EAIvB,CAAC,EAAC,EAAE,CAAC;EAGL,oBACIV,OAAA;IAAAqB,QAAA,gBACIrB,OAAA;MAAAqB,QAAA,EAAI;IAAqC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9CzB,OAAA;MAAK0B,SAAS,EAAC,eAAe;MAAAL,QAAA,EAEtBlB,YAAY,CAACwB,GAAG,CAAC,CAACC,YAAY,EAAEC,KAAK,kBACjC7B,OAAA;QAAK0B,SAAS,EAAC,eAAe;QAAAL,QAAA,gBAC3BrB,OAAA;UAAK8B,GAAG,EAAEF,YAAY,CAACG,MAAM,CAAC,CAAC,CAAC,CAACC;QAAM;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eACzCzB,OAAA;UAAAqB,QAAA,GAAG,WAAS,EAACO,YAAY,CAACK,OAAO;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAFLI,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGpC,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEL,CAAC;AAEd;AAACvB,EAAA,CA/CuBD,UAAU;AAAAiC,EAAA,GAAVjC,UAAU;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}