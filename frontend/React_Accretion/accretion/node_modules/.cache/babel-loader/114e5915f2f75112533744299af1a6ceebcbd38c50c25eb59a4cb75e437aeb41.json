{"ast":null,"code":"var _s = $RefreshSig$();\n/* \nAuthenticate user by check JWT access token, refresh the access the access token if invalid\n*/\n\nimport { useEffect } from 'react';\nimport { useAuth } from './AuthContext';\nimport CheckJWTaccess from './CheckJWTaccess';\n// import RefreshJWTaccess from './RefreshJWTaccess';\n\nexport default async function AuthJWT() {\n  _s();\n  const {\n    isLoggedIn,\n    login\n  } = useAuth();\n  if (isLoggedIn) {\n    return true;\n  }\n  const jwt = JSON.parse(localStorage.getItem('jwt'));\n  useEffect(() => {\n    if (jwt && jwt.access != \"\" && jwt.refresh != \"\") {\n      console.log(\"JWT token is found in local storage \", jwt);\n      CheckJWTaccess(jwt.access).then(response => {\n        console.log(\"checkJWTaccess response: \", response);\n        if (response == true) {\n          console.log(\"JWT access token is valid\");\n          login();\n        } else {\n          console.log(\"JWT access token is invalid, try to refresh\");\n          // try to refresh the JWT access token \n          RefreshJWTaccess(jwt.refresh).then(response => {\n            if (response) {\n              login();\n            }\n          }).catch(error => {\n            console.log(\"refresh token failed\");\n            console.log(error);\n          });\n        }\n      }).catch(error => {\n        console.log(\"validate JWT access token failed\");\n        console.log(error);\n      });\n    }\n  }, []);\n}\n_s(AuthJWT, \"VvxoFpDcwxHDlRD0UQWm5xMCDD4=\", false, function () {\n  return [useAuth];\n});\n_c = AuthJWT;\nvar _c;\n$RefreshReg$(_c, \"AuthJWT\");","map":{"version":3,"names":["useEffect","useAuth","CheckJWTaccess","AuthJWT","_s","isLoggedIn","login","jwt","JSON","parse","localStorage","getItem","access","refresh","console","log","then","response","RefreshJWTaccess","catch","error","_c","$RefreshReg$"],"sources":["/Users/yxni-mbp/Dropbox (Personal)/Startup/Accretion/Website/frontend/React_Accretion/accretion/src/user-auth/AuthJWT.js"],"sourcesContent":["/* \nAuthenticate user by check JWT access token, refresh the access the access token if invalid\n*/\n\nimport { useEffect } from 'react';\nimport { useAuth } from './AuthContext'; \nimport CheckJWTaccess from './CheckJWTaccess'; \n// import RefreshJWTaccess from './RefreshJWTaccess';\n\nexport default async function AuthJWT() {\n    const { isLoggedIn, login } = useAuth(); \n\n    if (isLoggedIn) {\n        return true; \n    }\n    \n    const jwt = JSON.parse(localStorage.getItem('jwt')); \n\n    useEffect(() => {\n        if (jwt && jwt.access != \"\" && jwt.refresh != \"\") {\n            console.log(\"JWT token is found in local storage \", jwt);\n            CheckJWTaccess(jwt.access) \n            .then( response => {\n                console.log(\"checkJWTaccess response: \", response);\n                if (response == true) {\n                    console.log(\"JWT access token is valid\");\n                    login(); \n                } else { \n                    console.log(\"JWT access token is invalid, try to refresh\");\n                    // try to refresh the JWT access token \n                    RefreshJWTaccess(jwt.refresh)\n                    .then( response => {\n                        if (response) {\n                            login();\n                        }\n                    })\n                    .catch( (error) => {\n                        console.log(\"refresh token failed\");\n                        console.log(error);\n                    })\n                }\n            })\n            .catch((error) => {\n                console.log(\"validate JWT access token failed\");\n                console.log(error);\n            })\n        }\n    },[]);\n}"],"mappings":";AAAA;AACA;AACA;;AAEA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,OAAO,QAAQ,eAAe;AACvC,OAAOC,cAAc,MAAM,kBAAkB;AAC7C;;AAEA,eAAe,eAAeC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACpC,MAAM;IAAEC,UAAU;IAAEC;EAAM,CAAC,GAAGL,OAAO,CAAC,CAAC;EAEvC,IAAII,UAAU,EAAE;IACZ,OAAO,IAAI;EACf;EAEA,MAAME,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,KAAK,CAAC,CAAC;EAEnDX,SAAS,CAAC,MAAM;IACZ,IAAIO,GAAG,IAAIA,GAAG,CAACK,MAAM,IAAI,EAAE,IAAIL,GAAG,CAACM,OAAO,IAAI,EAAE,EAAE;MAC9CC,OAAO,CAACC,GAAG,CAAC,sCAAsC,EAAER,GAAG,CAAC;MACxDL,cAAc,CAACK,GAAG,CAACK,MAAM,CAAC,CACzBI,IAAI,CAAEC,QAAQ,IAAI;QACfH,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEE,QAAQ,CAAC;QAClD,IAAIA,QAAQ,IAAI,IAAI,EAAE;UAClBH,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;UACxCT,KAAK,CAAC,CAAC;QACX,CAAC,MAAM;UACHQ,OAAO,CAACC,GAAG,CAAC,6CAA6C,CAAC;UAC1D;UACAG,gBAAgB,CAACX,GAAG,CAACM,OAAO,CAAC,CAC5BG,IAAI,CAAEC,QAAQ,IAAI;YACf,IAAIA,QAAQ,EAAE;cACVX,KAAK,CAAC,CAAC;YACX;UACJ,CAAC,CAAC,CACDa,KAAK,CAAGC,KAAK,IAAK;YACfN,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;YACnCD,OAAO,CAACC,GAAG,CAACK,KAAK,CAAC;UACtB,CAAC,CAAC;QACN;MACJ,CAAC,CAAC,CACDD,KAAK,CAAEC,KAAK,IAAK;QACdN,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;QAC/CD,OAAO,CAACC,GAAG,CAACK,KAAK,CAAC;MACtB,CAAC,CAAC;IACN;EACJ,CAAC,EAAC,EAAE,CAAC;AACT;AAAChB,EAAA,CAvC6BD,OAAO;EAAA,QACHF,OAAO;AAAA;AAAAoB,EAAA,GADXlB,OAAO;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}